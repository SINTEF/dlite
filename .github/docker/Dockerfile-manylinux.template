# -*- Mode: Dockerfile -*-
# Template Dockerfile for manylinux 2010 and 2014 for building Python pypi package.
# Is superseeded by the Dockerfile-manylinux_x_y.template, but will continue to be used to support i686 architectures.
#
# On these old systems we do not install requirements_full.txt
#
# Usage:
#
# Copy this template file and replace:
# - `{{ TYPE }}` major glibc version, ex: _2_24, _2_28
# - `{{ ARCH }}` architecture, ex:  x86_64, i686
# - `{{ PY_MINORS }}` minor Python3 version numbers, ex: "8 9 10"
# - `{{ EXTRA_PRE }}` extra commands before installation
# - `{{ EXTRA_POST }}` extra commands after installation
# Remove the `.template` suffix from the copy.
#
# Examples
# --------
#
# Generate dockerfile:
#
#     .github/docker/gen_dockerfile.sh manylinux 2014 i686 > \
#         .github/docker/dockerfiles/Dockerfile-manylinux2014_i686
#
# Build:
#
#     cd dlite  # cd to DLite root directory
#     docker build -t dlite-manylinux2014_i686 \
#         -f .github/docker/dockerfiles/Dockerfile-manylinux2014_i686 .
#
# Run (for debugging):
#
#     docker run --rm -it \
#         --volume $PWD:/io \
#         --user $(id -u):$(id -g) \
#         dlite-manylinux2014_i686 \
#         /bin/bash
#

# Reference: https://github.com/pypa/manylinux#manylinux2014-centos-7-based
FROM quay.io/pypa/manylinux{{ TYPE }}_{{ ARCH }}:latest

COPY requirements.txt requirements_full.txt requirements_dev.txt /tmp/

{{ EXTRA_PRE }}

# Enable rpmfusion for additional packages
RUN \
  yum update -y && \
  yum localinstall -y --skip-broken \
    https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm --eval %{centos_ver}).noarch.rpm \
    https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm --eval %{centos_ver}).noarch.rpm && \
  yum install -y \
    redland-devel \
    rasqal-devel \
    libcurl-devel \
    libxslt-devel \
    libxml2-devel \
    libffi-devel && \
  # hdf5-devel is needed for building the hdf5 plugin
  yum install -y hdf5-devel || true && \
  # Unpack static libraries
  # It's necessary to be in /opt/_internal because the internal libraries
  # exist here.
  cd /opt/_internal && \
  tar -Jxvf static-libs-for-embedding-only.tar.xz && \
  # Filter out challenging packages from requirements
  sed \
    -e '/mongomock/d' \
    -i  /tmp/requirements_dev.txt

ARG PY_MINORS="{{ PY_MINORS }}"

RUN \
  # Install required Python packages
  mkdir -p /ci/pip_cache && \
  for minor in ${PY_MINORS}; do \
    python3.${minor} -m pip install --cache-dir=/ci/pip_cache -U pip && \
    python3.${minor} -m pip install --cache-dir=/ci/pip_cache \
      -U setuptools wheel && \
    python3.${minor} -m pip install --cache-dir=/ci/pip_cache \
      -r /tmp/requirements.txt \
      -r /tmp/requirements_dev.txt \
  done && \
  rm -rf /ci/pip_cache

{{ EXTRA_POST }}
