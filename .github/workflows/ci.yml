name: CI tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Update submodules
      run: |
        git submodule init
        git submodule update
    - name: Get Cmake version
      run: |
        cmake --version
    - name: Install dependencies
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get install \
          libjansson-dev \
          libhdf5-dev \
          swig3.0 \
          doxygen \
          graphviz \
          python3 \
          python3-pip \
          python3-dev \
          python3-numpy \
          python3-yaml \
          python3-psycopg2
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip -r requirements.txt
    - name: check numpy
      run: |
        which python3
        python3 --version
        pip3 --version
        python3 -c 'import numpy as np; print(np.get_include())'
    - name: configure
      run: |
        mkdir build
        cd build
        Python3_ROOT=$(python3 -c 'import sys; print(sys.exec_prefix)') \
          CFLAGS='-Wno-missing-field-initializers' \
          cmake .. -DFORCE_EXAMPLES=ON
        cd -
    - name: make
      run: |
        cd build
        make
        cd -
    - name: install
      run: |
        cd build
        make install
        cd -
    - name: make test
      run: |
        cd build
        ctest || ctest --rerun-failed --output-on-failure -V
        cd -
    - name: build Linux wheel
      run: |
        cd python
        pip install numpy wheel
        python3 setup.py bdist_wheel
        cd -
    - name: Install python package via setup.py and test the installation
      run: |
         cd python
         python3 setup.py install --user
         cd ../bindings/python/tests
         python3 __main__.py

  # Temporary placement for this job - will eventually be moved to cd.yml
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        # os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools wheel
          python -m pip install -U cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        working-directory: python/
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest
          CIBW_BUILD_FRONTEND: pip
          CIBW_BEFORE_ALL_LINUX: yum update -y && yum install -y cmake3-data redland-devel rasqal-devel hdf5-devel swig
          CIBW_BEFORE_BUILD: cd /opt/_internal && tar -Jxvf static-libs-for-embedding-only.tar.xz

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
