name: CD - Publish

on:
  release:
    types:
    - published

env:
  PUBLISH_UPDATE_BRANCH: master
  GIT_USER_NAME: "TEAM 4.0[bot]"
  GIT_USER_EMAIL: "Team4.0@SINTEF.no"

jobs:

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: github.repository == 'SINTEF/dlite' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    # - name: Get tagged versions
    #   run: echo "PREVIOUS_VERSION=$(git tag -l --sort -version:refname | sed -n 2p)" >> $GITHUB_ENV

    # - name: Create release-specific changelog
    #   uses: CharMixer/auto-changelog-action@v1
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     release_branch: ${{ env.PUBLISH_UPDATE_BRANCH }}
    #     since_tag: "${{ env.PREVIOUS_VERSION }}"
    #     output: "release_changelog.md"

    # - name: Append changelog to release body
    #   run: |
    #     gh api /repos/${{ github.repository }}/releases/${{ github.event.release.id }} --jq '.body' > release_body.md
    #     cat release_changelog.md >> release_body.md
    #     gh api /repos/${{ github.repository }}/releases/${{ github.event.release.id }} -X PATCH -F body='@release_body.md'
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build source distribution
      run: |
        docker build -t dlite-manylinux -f .github/docker/Dockerfile-manylinux .
        docker run --rm \
          --volume $PWD:/io \
          dlite-manylinux

    - name: Publish package to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        packages_dir: python/dist/

    # - name: Publish package to PyPI
    #   uses: pypa/gh-action-pypi-publish@v1.5.0
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_TOKEN }}
    #     packages_dir: python/dist/
