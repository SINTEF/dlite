name: CI tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Update submodules
      run: |
        git submodule init
        git submodule update
    - name: Get Cmake version
      run: |
        cmake --version
    - name: Install dependencies
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get install \
          libhdf5-dev \
          swig4.0 \
          doxygen \
          graphviz \
          python3 \
          python3-pip \
          python3-dev \
          python3-numpy \
          python3-yaml \
          python3-psycopg2
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip -r requirements.txt
        pip install -r requirements_doc.txt
    - name: check numpy
      run: |
        which python3
        python3 --version
        pip3 --version
        python3 -c 'import numpy as np; print(np.get_include())'
    - name: configure
      run: |
        mkdir build
        cd build
        Python3_ROOT=$(python3 -c 'import sys; print(sys.exec_prefix)') \
          CFLAGS='-Wno-missing-field-initializers' \
          cmake .. -DFORCE_EXAMPLES=ON -DWITH_FORTRAN=YES
        cd -
    - name: make
      run: |
        cd build
        make
        cd -
    - name: install
      run: |
        cd build
        make install
        cd -
    - name: make test
      run: |
        cd build
        ctest || ctest --rerun-failed --output-on-failure -V
        cd -
    - name: build Linux wheel
      run: |
        cd python
        pip install numpy wheel
        python3 setup.py bdist_wheel
        cd -
    - name: Install python package via setup.py and test the installation
      run: |
        cd python
        python3 setup.py install --user
        cd ../bindings/python/tests
        python3 __main__.py

  pre-commit:
    name: Run `pre-commit`
    runs-on: ubuntu-latest

    steps:
    - name: Checkout dlite
      uses: actions/checkout@v3

    - name: Set up Python 3.7 (oldest supported version)
      uses: actions/setup-python@v4
      with:
        python-version: "3.7"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        pip install -r requirements_dev.txt

    - name: Test with `pre-commit`
      run: SKIP=pylint,pylint-tests pre-commit run --all-files

  pylint:
    name: Run `pylint``
    runs-on: ubuntu-latest

    steps:
    - name: Checkout dlite
      uses: actions/checkout@v3

    - name: Set up Python 3.7 (oldest supported version)
      uses: actions/setup-python@v4
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -r requirements.txt -r requirements_doc.txt -r requirements_dev.txt
        pip install pylint

    - name: Run `pylint`
      run: pylint --rcfile=.pylintrc --recursive=yes bindings cmake examples python src storages tools

    - name: Run `pylint` for test/
      run: pylint --rcfile=.pylintrc --recursive=yes --disable=import-outside-toplevel,redefined-outer-name test

  safety:
    name: Run `pylint` & `safety`
    runs-on: ubuntu-latest

    steps:
    - name: Checkout dlite
      uses: actions/checkout@v3

    - name: Set up Python 3.7 (oldest supported version)
      uses: actions/setup-python@v4
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -r requirements.txt -r requirements_doc.txt -r requirements_dev.txt
        pip install safety

    - name: Run `safety`
      run: pip freeze | safety check --stdin
