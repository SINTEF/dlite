# -*- Mode: Dockerfile -*-
# Dockerfile for building Python pypi package
#
# Build:
#
#     docker build -t dlite-manylinux3.9 -f Dockerfile-manylinux .
#
# Run:
#
#     docker run --rm -it \
#        --volume $PWD:/io  \
#        --user $(id -u):$(id -g) \
#        dlite-manylinux3.9
#

#FROM quay.io/pypa/manylinux_2_24_x86_64
FROM quay.io/pypa/manylinux2014_x86_64

RUN yum update -y && yum install -y \
    cmake3-data \
    redland-devel \
    rasqal-devel

#WORKDIR /io
#COPY bindings bindings/
#COPY cmake cmake/
#COPY doc doc/
#COPY examples examples/
#COPY src src/
#COPY storages storages/
#COPY tools tools/
##COPY CMakeLists.txt requirements.txt requirements_dev.txt LICENSE README.md ./
#COPY CMakeLists.txt LICENSE README.md ./

# Unpack static libraries
WORKDIR /opt/_internal
RUN tar -Jxvf static-libs-for-embedding-only.tar.xz


# Python version and tag
ENV PYVER=3.9
ENV PYTAG=cp39
ENV PYABI=${PYTAG}
ENV ABITAG=${PYTAG}-${PYABI}

ENV Python3_EXECUTABLE=/opt/python/${ABITAG}/bin/python${PYVER}
ENV Python3_LIBRARY=/opt/python/${ABITAG}/lib/libpython${PYVER}.a
ENV Python3_INCLUDE_DIR=/opt/python/${ABITAG}/include/python${PYVER}


RUN ${Python3_EXECUTABLE} -m pip install -U pip && \
    ${Python3_EXECUTABLE} -m pip install -U setuptools wheel build numpy


# Remove existing build directory if it exists
#ENV BUILDDIR=/io/python/build/temp.linux-${PLAT}-${PYVER}
#RUN if [ -f {$BUILDDIR} ]; then rm -r ${BUILDDIR}; fi


#WORKDIR /io
#RUN mkdir -p python/dlite
#COPY python/MANIFEST.in python/pyproject.toml python/setup.py python/
#COPY python/dlite/__init__.py python/dlite/__init__.py
#RUN cp LICENSE README.md ./python/

COPY requirements.txt /tmp/requirements.txt
RUN ${Python3_EXECUTABLE} -m pip install -r /tmp/requirements.txt


#WORKDIR /io/python
# RUN python -m build -n

#RUN ${Python3_EXECUTABLE} setup.py --verbose sdist
#RUN ${Python3_EXECUTABLE} setup.py --verbose bdist_wheel
#RUN ${Python3_EXECUTABLE} -m pip wheel /io/python --no-deps -w wheels/
